from lib2to3.fixes.fix_input import context

from flask import Flask, render_template

app = Flask(__name__)

@app.route("/")
def index():
    context = {
        "name": "Максим",
        "user_description": "преподаватель в GeekSchool, эксперт-спикер в Rubius, эксперт в Zerocoder, стример, Data Engineer, Unity-разраб в отставке, фрилансер и т.д."
    }
    return render_template("index.html", **context)

@app.route("/stories")
def hello():
    context = {
        "name": "Максим",
        "stories": [
            {
                "title": "О том как роутер прошивал",
                "content": "Хотел точечную маршрутизацию на роутере настроить. Родная прошивка у него это, естественно, не поддерживает. Поэтому надо было искать и ставить кастомные, чтобы это настроить. По итогу вчера роутер всю ночь+утро кастомными прошивками шил, по ssh настраивал сетевые конфиги, ставил веб-интерфейс luci и не понимал, почему ни на одной прошивке роутер нормально не работает. В итоге устал и спать ушел, а потом весь день работал и далее вел стрим с порезанной в 6x скорости интернета потому что, видите ли, последняя из прошивок не поддерживает скорость выше 190мбит (а у меня всегда 700-800 было йоу). Каждая прошивка и настройка отнимала по несколько часов времени, благодаря чему спать лег даже не под утро, а к обеду. \n А самое забавное, что после этого боя с роутером длинною, как будто бы, в жизнь, я осознал, что у него всего 50 Мб памяти есть. Из которых я всеми настройками и необходимыми ништяками для кастомной прошивки занял 40 Мб. А УТИЛИТА ДЛЯ ТОЧЕЧНОЙ МАРШРУТИЗАЦИИ ВЕСИТ 10.7 МБ АААААААА \n ЗАТО КОГДА Я СЕЙЧАС РЕШИЛ СДАТЬСЯ И ПРОШИТЬ ЕГО ОБРАТНО РОДНОЙ ПРОШИВКОЙ - ВСЕ САМО НАСТРОИЛОСЬ ЗА 2 МИНУТЫ И СКОРОСТЬ ТЕПЕРЬ ДАЖЕ 900 МБИТ."
            },
            {
                "title": "О том как не придумал вторую историю",
                "content": "Не придумал вторую историю"
            }
        ]
    }
    return render_template("stories.html", **context)

if __name__ == "__main__":
    app.run(debug=True)